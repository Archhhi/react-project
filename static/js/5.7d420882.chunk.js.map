{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","components/utils/validators/validators.js","components/Footer/Footer.jsx","components/Footer/Footer.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["FormControl","meta","touched","error","children","hasError","className","styles","formControl","Input","props","input","restProps","child","createField","placeholder","name","validate","component","text","module","exports","required","value","maxLengthCreator","maxLength","length","Footer","style","contacts","maxLength20","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","s","authBlock","formData","email","password"],"mappings":"gQAIMA,EAAc,SAAC,GAA0C,IAAD,IAAvCC,KAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,SACrCC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACKC,GAEJC,GAAY,8BAAOF,KAKnBM,EAAQ,SAACC,GAAW,IACrBC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BT,KAA8BS,EAAxBG,MADO,YACiBH,EADjB,2BAE5B,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,MAG5CE,EAAc,SAACC,EAAaC,EAAMC,EAAUC,GAA9B,IAAyCR,EAAzC,uDAAiD,GAAIS,EAArD,uDAA4D,GAA5D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EACbC,KAAMA,EACNC,SAAUA,EACVC,UAAWA,GACPR,IALf,IAK0BS,K,oBC1B9BC,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCNlC,sCAiBeE,IAdA,WACX,OACI,gCACI,yIAA8B,sCAE9B,yBAAKrB,UAAWsB,IAAMC,UAClB,wHADJ,IACkC,6BAC9B,mIACA,0J,oBCVhBT,EAAOC,QAAU,CAAC,SAAW,2B,oBCA7BD,EAAOC,QAAU,CAAC,UAAY,2B,iCCD9B,iHAWMS,GAXN,OAWoBN,YAAiB,KAmB/BO,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAjBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc/B,EAAW,EAAXA,MAC9B,OACI,0BAAMgC,SAAUD,GACXpB,YAAY,QAAS,QAAS,CAACQ,IAAUQ,GAAcrB,IAAO,CAAC2B,KAAM,SACrEtB,YAAY,WAAY,WAAY,CAACQ,KAAWb,IAAO,CAAC2B,KAAM,aAC9DtB,YAAY,KAAM,aAAc,GAAIL,IAAO,CAAC2B,KAAM,YAAa,eAE/DjC,GAAS,yBAAKG,UAAWsB,IAAMS,kBAC3BlC,GAEL,6BACI,yIA+BDmC,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAvBD,SAAC5B,GAEX,GAAIA,EAAM8B,OACN,OAAO,kBAAC,IAAD,CAAUG,GAAI,aAOzB,OACI,yBAAKrC,UAAWsC,IAAEC,WACd,kGACA,kBAACd,EAAD,CAAgBI,SAPP,SAACW,GACdpC,EAAMgC,MAAMI,EAASC,MAAOD,EAASE,UAAU","file":"static/js/5.7d420882.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validate}\r\n               component={component}\r\n               {...props} /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1EZc-\",\"error\":\"FormControls_error__1Q4s8\",\"formSummaryError\":\"FormControls_formSummaryError__3iYhN\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <span>Все права защищены 2020 <sup>&copy;</sup></span>\r\n\r\n            <div className={style.contacts}>\r\n                <span>Контакты автора:</span> <br />\r\n                <span>Номер телефона: +7 905 437 98-77</span>\r\n                <span>Электронная почта: brabus-20@mail.ru</span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Footer_contacts__2ky68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authBlock\":\"Login_authBlock__3ZoBe\"};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Login.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Input, createField} from \"../common/FormControls/FormControls\";\r\nimport style from \"../common/FormControls/FormControls.module.css\";\r\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required, maxLength20], Input, {type: 'text'})}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Авторизироваться</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, true);\r\n    }\r\n\r\n    return (\r\n        <div className={s.authBlock}>\r\n            <h1>Авторизация</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}